

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_cron" WITH SCHEMA "pg_catalog";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "public";






CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."tle" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "content" "text",
    "satellite_id" "uuid"
);


ALTER TABLE "public"."tle" OWNER TO "postgres";


ALTER TABLE "public"."tle" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."TLE_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."downlink_data" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "schedule_id" "uuid",
    "header" "text",
    "data" "text",
    "uplink_id" "uuid",
    "ground_station_id" "uuid"
);


ALTER TABLE "public"."downlink_data" OWNER TO "postgres";


COMMENT ON COLUMN "public"."downlink_data"."uplink_id" IS 'uplink_pool.id';



CREATE TABLE IF NOT EXISTS "public"."ground_station_data" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" "text" NOT NULL,
    "call_sign" "text",
    "radio_band" "text",
    "modulation_type" "text",
    "altitude" double precision NOT NULL,
    "latitude" double precision NOT NULL,
    "longitude" double precision NOT NULL,
    "antenna_type" "text",
    "gain" integer,
    "country" "text" NOT NULL,
    "region" "text" NOT NULL
);


ALTER TABLE "public"."ground_station_data" OWNER TO "postgres";


COMMENT ON TABLE "public"."ground_station_data" IS 'GS list';



CREATE TABLE IF NOT EXISTS "public"."in_memory_address" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "satellite_id" "uuid",
    "start_address" bigint,
    "end_address" bigint
);


ALTER TABLE "public"."in_memory_address" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."operation" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "update_at" timestamp with time zone,
    "create_user_id" "uuid",
    "commands" "jsonb",
    "satellite_schedule_id" "uuid",
    "qc1" "uuid",
    "qc2" "uuid"
);


ALTER TABLE "public"."operation" OWNER TO "postgres";


COMMENT ON COLUMN "public"."operation"."qc1" IS 'commander';



COMMENT ON COLUMN "public"."operation"."qc2" IS 'operator';



ALTER TABLE "public"."operation" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."operation_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."parsed_tle" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "satellite_id" "uuid",
    "name" "text",
    "classification" "text",
    "launch_year" bigint,
    "launch_number" bigint,
    "launch_piece" "text",
    "epoch_year" bigint,
    "epoch_day" double precision,
    "mean_motion_first_derivative" double precision,
    "b_star_drag_term" double precision,
    "ephemeris_type" bigint,
    "element_set_number" bigint,
    "inclination" double precision,
    "right_ascension" double precision,
    "eccentricity" double precision,
    "perigee_argument" double precision,
    "mean_anomaly" double precision,
    "mean_motion" double precision,
    "revolution_number" bigint,
    "mean_motion_second_derivative" double precision
);


ALTER TABLE "public"."parsed_tle" OWNER TO "postgres";


ALTER TABLE "public"."parsed_tle" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."parsed_tle_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."satellite_list" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "norad_id" bigint,
    "tle_fetch_on" boolean,
    "last_updated" timestamp with time zone,
    "status" "text"
);


ALTER TABLE "public"."satellite_list" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."satellite_radio" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "downlink_frequency" numeric NOT NULL,
    "uplink_frequency" numeric,
    "call_sign" "text",
    "satellite_id" "uuid" NOT NULL
);


ALTER TABLE "public"."satellite_radio" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."satellite_schedule" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "satellite_id" "uuid",
    "aos" timestamp with time zone,
    "los" timestamp with time zone,
    "max_elevation" double precision,
    "aos_azimuth" double precision,
    "los_azimuth" double precision,
    "updates_count" bigint,
    "tle_updated_at" timestamp with time zone,
    "country" "jsonb",
    "tle_id" bigint
);


ALTER TABLE "public"."satellite_schedule" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."uplink_pool" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "satellite_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "command" "text" NOT NULL
);


ALTER TABLE "public"."uplink_pool" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."user_details" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "unit_no" bigint,
    "last_name" "text",
    "first_name" "text",
    "auth_id" "uuid",
    "line_id" "text"
);


ALTER TABLE "public"."user_details" OWNER TO "postgres";


ALTER TABLE ONLY "public"."tle"
    ADD CONSTRAINT "TLE_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."downlink_data"
    ADD CONSTRAINT "downlink_data_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ground_station_data"
    ADD CONSTRAINT "ground_station_data_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."in_memory_address"
    ADD CONSTRAINT "in_memory_address_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."operation"
    ADD CONSTRAINT "operation_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."parsed_tle"
    ADD CONSTRAINT "parsed_tle_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."satellite_list"
    ADD CONSTRAINT "satellite_list_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."satellite_list"
    ADD CONSTRAINT "satellite_list_norad_id_key" UNIQUE ("norad_id");



ALTER TABLE ONLY "public"."satellite_list"
    ADD CONSTRAINT "satellite_list_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."satellite_radio"
    ADD CONSTRAINT "satellite_radio_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."satellite_schedule"
    ADD CONSTRAINT "satellite_schedule_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tle"
    ADD CONSTRAINT "tle_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."uplink_pool"
    ADD CONSTRAINT "uplink_pool_command_key" UNIQUE ("command");



ALTER TABLE ONLY "public"."uplink_pool"
    ADD CONSTRAINT "uplink_pool_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."user_details"
    ADD CONSTRAINT "user_details_pkey" PRIMARY KEY ("id");



CREATE OR REPLACE TRIGGER "calculate_pass_schedule_hook" AFTER INSERT ON "public"."tle" FOR EACH ROW EXECUTE FUNCTION "supabase_functions"."http_request"('https://dpagmoqrvsuxctppiyry.supabase.co/functions/v1/calculate-pass-schedule-webhook', 'POST', '{"Content-type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRwYWdtb3FydnN1eGN0cHBpeXJ5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjQxNzI3MTAsImV4cCI6MjAzOTc0ODcxMH0.QnqeydoooVxIU0qx3pYMNS7Yy0t32OBtqviYfszwk9w"}', '{}', '1000');



CREATE OR REPLACE TRIGGER "insert-new-tle-hook" AFTER INSERT ON "public"."tle" FOR EACH ROW EXECUTE FUNCTION "supabase_functions"."http_request"('https://dpagmoqrvsuxctppiyry.supabase.co/functions/v1/tle-update-webhook', 'POST', '{"Content-type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRwYWdtb3FydnN1eGN0cHBpeXJ5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjQxNzI3MTAsImV4cCI6MjAzOTc0ODcxMH0.QnqeydoooVxIU0qx3pYMNS7Yy0t32OBtqviYfszwk9w"}', '{}', '1000');



ALTER TABLE ONLY "public"."downlink_data"
    ADD CONSTRAINT "downlink_data_ground_station_id_fkey" FOREIGN KEY ("ground_station_id") REFERENCES "public"."ground_station_data"("id") ON UPDATE CASCADE;



ALTER TABLE ONLY "public"."downlink_data"
    ADD CONSTRAINT "downlink_data_schedule_id_fkey" FOREIGN KEY ("schedule_id") REFERENCES "public"."satellite_schedule"("id");



ALTER TABLE ONLY "public"."downlink_data"
    ADD CONSTRAINT "downlink_data_uplink_id_fkey" FOREIGN KEY ("uplink_id") REFERENCES "public"."uplink_pool"("id") ON UPDATE CASCADE;



ALTER TABLE ONLY "public"."in_memory_address"
    ADD CONSTRAINT "in_memory_address_satellite_id_fkey" FOREIGN KEY ("satellite_id") REFERENCES "public"."satellite_list"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."operation"
    ADD CONSTRAINT "operation_create_user_id_fkey" FOREIGN KEY ("create_user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."operation"
    ADD CONSTRAINT "operation_satellite_schedule_id_fkey" FOREIGN KEY ("satellite_schedule_id") REFERENCES "public"."satellite_schedule"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."parsed_tle"
    ADD CONSTRAINT "parsed_tle_id_fkey" FOREIGN KEY ("id") REFERENCES "public"."tle"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."parsed_tle"
    ADD CONSTRAINT "parsed_tle_name_fkey" FOREIGN KEY ("name") REFERENCES "public"."satellite_list"("name") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."parsed_tle"
    ADD CONSTRAINT "parsed_tle_satellite_id_fkey" FOREIGN KEY ("satellite_id") REFERENCES "public"."satellite_list"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."satellite_radio"
    ADD CONSTRAINT "satellite_radio_satellite_id_fkey" FOREIGN KEY ("satellite_id") REFERENCES "public"."satellite_list"("id") ON UPDATE CASCADE;



ALTER TABLE ONLY "public"."satellite_schedule"
    ADD CONSTRAINT "satellite_schedule_satellite_id_fkey" FOREIGN KEY ("satellite_id") REFERENCES "public"."satellite_list"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."satellite_schedule"
    ADD CONSTRAINT "satellite_schedule_tle_id_fkey" FOREIGN KEY ("tle_id") REFERENCES "public"."tle"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."tle"
    ADD CONSTRAINT "tle_satellite_id_fkey" FOREIGN KEY ("satellite_id") REFERENCES "public"."satellite_list"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."uplink_pool"
    ADD CONSTRAINT "uplink_pool_satellite_id_fkey" FOREIGN KEY ("satellite_id") REFERENCES "public"."satellite_list"("id") ON UPDATE CASCADE;



ALTER TABLE ONLY "public"."user_details"
    ADD CONSTRAINT "user_details_auth_id_fkey" FOREIGN KEY ("auth_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



CREATE POLICY "Enable insert for anon only" ON "public"."tle" FOR INSERT TO "anon" WITH CHECK (true);





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."parsed_tle";



SET SESSION AUTHORIZATION "postgres";
RESET SESSION AUTHORIZATION;



GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";






























































































































































































































SET SESSION AUTHORIZATION "postgres";
RESET SESSION AUTHORIZATION;



SET SESSION AUTHORIZATION "postgres";
RESET SESSION AUTHORIZATION;





















GRANT ALL ON TABLE "public"."tle" TO "anon";
GRANT ALL ON TABLE "public"."tle" TO "authenticated";
GRANT ALL ON TABLE "public"."tle" TO "service_role";



GRANT ALL ON SEQUENCE "public"."TLE_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."TLE_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."TLE_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."downlink_data" TO "anon";
GRANT ALL ON TABLE "public"."downlink_data" TO "authenticated";
GRANT ALL ON TABLE "public"."downlink_data" TO "service_role";



GRANT ALL ON TABLE "public"."ground_station_data" TO "anon";
GRANT ALL ON TABLE "public"."ground_station_data" TO "authenticated";
GRANT ALL ON TABLE "public"."ground_station_data" TO "service_role";



GRANT ALL ON TABLE "public"."in_memory_address" TO "anon";
GRANT ALL ON TABLE "public"."in_memory_address" TO "authenticated";
GRANT ALL ON TABLE "public"."in_memory_address" TO "service_role";



GRANT ALL ON TABLE "public"."operation" TO "anon";
GRANT ALL ON TABLE "public"."operation" TO "authenticated";
GRANT ALL ON TABLE "public"."operation" TO "service_role";



GRANT ALL ON SEQUENCE "public"."operation_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."operation_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."operation_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."parsed_tle" TO "anon";
GRANT ALL ON TABLE "public"."parsed_tle" TO "authenticated";
GRANT ALL ON TABLE "public"."parsed_tle" TO "service_role";



GRANT ALL ON SEQUENCE "public"."parsed_tle_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."parsed_tle_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."parsed_tle_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."satellite_list" TO "anon";
GRANT ALL ON TABLE "public"."satellite_list" TO "authenticated";
GRANT ALL ON TABLE "public"."satellite_list" TO "service_role";



GRANT ALL ON TABLE "public"."satellite_radio" TO "anon";
GRANT ALL ON TABLE "public"."satellite_radio" TO "authenticated";
GRANT ALL ON TABLE "public"."satellite_radio" TO "service_role";



GRANT ALL ON TABLE "public"."satellite_schedule" TO "anon";
GRANT ALL ON TABLE "public"."satellite_schedule" TO "authenticated";
GRANT ALL ON TABLE "public"."satellite_schedule" TO "service_role";



GRANT ALL ON TABLE "public"."uplink_pool" TO "anon";
GRANT ALL ON TABLE "public"."uplink_pool" TO "authenticated";
GRANT ALL ON TABLE "public"."uplink_pool" TO "service_role";



GRANT ALL ON TABLE "public"."user_details" TO "anon";
GRANT ALL ON TABLE "public"."user_details" TO "authenticated";
GRANT ALL ON TABLE "public"."user_details" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
